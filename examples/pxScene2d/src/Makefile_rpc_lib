CURRENTPATH = `pwd`
all: rtRpc

clean:
	rm -rf $(OBJDIR)
	rm -f librtrpc.so

VPATH=linux


RT_SRCS=\
           rtError.cpp \
           rtFile.cpp \
           rtLog.cpp \
           rtPathUtils.cpp \
           rtString.cpp \
           rtObject.cpp \
           rtValue.cpp \
           rtThreadPool.cpp \
           rtThreadQueue.cpp \
           rtThreadTask.cpp \
           rtLibrary.cpp \
           rtZip.cpp \
           ioapi_mem.c \
           utf8.c

RPC_SRCS=\
           rpc/rtObjectCache.cpp \
           rpc/rtRemoteFunction.cpp \
           rpc/rtRemoteObject.cpp \
           rpc/rtRpcClient.cpp \
           rpc/rtRpcConfig.cpp \
           rpc/rtRpc.cpp \
           rpc/rtRpcMessage.cpp \
           rpc/rtRpcResolver.cpp \
           rpc/rtRpcServer.cpp \
           rpc/rtRpcStream.cpp \
           rpc/rtSocketUtils.cpp \
           rpc/rtValueReader.cpp \
           rpc/rtValueWriter.cpp

PXCOREDIR=../../../
PXHDRS=$(PXCOREDIR)/src

NODEINC=../external/libnode
NODEDIR=../external/libnode

SEARCH=\
  -Ilinux \
  -I$(EXTDIR)/jpg \
  -I$(EXTDIR)/curl/include \
  -I$(EXTDIR)/ft/include \
  -I$(EXTDIR)/png \
  -I$(PXHDRS)\
  -I. \
  -Irpc \
  -I$(NODEINC)/src \
  -I$(NODEINC)/deps/uv/include \
  -I$(NODEINC)/deps/v8 \
  -I$(NODEINC)/deps/cares/include \
  -I$(NODEINC)/deps/debugger-agent/include \
  -I$(NODEINC)/deps/v8/include \
	$(PXCORE_INCLUDES)


CXXFLAGS= -Wno-attributes -Wall -Wextra -fpermissive -fPIC $(SEARCH) -g -DRT_PLATFORM_LINUX -DPX_NO_WINDOW -DPX_PLATFORM_GENERIC_EGL -DENABLE_PX_WAYLAND_RPC -DBSTD_CPU_ENDIAN=BSTD_ENDIAN_LITTLE -std=gnu++11 -DRAPIDJSON_HAS_STDSTRING

LDNODE   = -L$(NODEDIR)/out/Release/obj.target
LDNODEV8 = -L$(NODEDIR)/out/Release


LDEXT   = -lpng16 -ljpeg -lfreetype -lcurl -luuid $(LDNODE) $(LDNODEV8)

LDFLAGS = -lnode -pthread $(LDEXT) -ldl -lrt -L./ -shared -Wl,-soname,librtrpc.so -o librtrpc.so.1.0


OBJDIR=obj

$(OBJDIR)/rtMutexNative.o: linux/rtMutexNative.cpp
	$(CXX) -o $(OBJDIR)/rtMutexNative.o -Wall $(CXXFLAGS) -c linux/rtMutexNative.cpp

$(OBJDIR)/rtThreadPoolNative.o: linux/rtThreadPoolNative.cpp
	$(CXX) -o $(OBJDIR)/rtThreadPoolNative.o -Wall $(CXXFLAGS) -c linux/rtThreadPoolNative.cpp

$(OBJDIR)/rtWrapperUtils.o: jsbindings/rtWrapperUtils.cpp
	$(CXX) -o $(OBJDIR)/rtWrapperUtils.o -Wall $(CXXFLAGS) -c jsbindings/rtWrapperUtils.cpp

$(OBJDIR)/rtFunctionWrapper.o: jsbindings/rtFunctionWrapper.cpp
	$(CXX) -o $(OBJDIR)/rtFunctionWrapper.o -Wall $(CXXFLAGS) -c jsbindings/rtFunctionWrapper.cpp

$(OBJDIR)/rtObjectWrapper.o: jsbindings/rtObjectWrapper.cpp
	$(CXX) -o $(OBJDIR)/rtObjectWrapper.o -Wall $(CXXFLAGS) -c jsbindings/rtObjectWrapper.cpp

$(OBJDIR)/jsCallback.o: jsbindings/jsCallback.cpp
	$(CXX) -o $(OBJDIR)/jsCallback.o -Wall $(CXXFLAGS) -c jsbindings/jsCallback.cpp


SRCS=$(RT_SRCS) $(RPC_SRCS)

OBJS=$(patsubst %.cpp, $(OBJDIR)/%.o, $(notdir $(SRCS)))
OBJS:=$(patsubst %.c, $(OBJDIR)/%.o, $(OBJS))
OBJS: $(SRCS)
OTHER_OBJS=$(OBJDIR)/rtMutexNative.o $(OBJDIR)/rtThreadPoolNative.o $(OBJDIR)/rtWrapperUtils.o $(OBJDIR)/rtFunctionWrapper.o $(OBJDIR)/rtObjectWrapper.o $(OBJDIR)/jsCallback.o
OBJS_ALL=$(OBJS) $(OTHER_OBJS)

$(OBJDIR)/%.o : %.cpp
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(CXX) -c $(CXXFLAGS) $< -o $@

$(OBJDIR)/%.o : rpc/%.cpp
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(CXX) -c $(CXXFLAGS) $< -o $@

$(OBJDIR)/%.o : %.c
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(CC) -c $(CXXFLAGS) $< -o $@


rtRpc: $(OBJS_ALL)
	$(CXX) $(OBJS_ALL) $(LDFLAGS)
	ln -sf librtrpc.so.1.0 librtrpc.so.1
	ln -sf librtrpc.so.1 librtrpc.so

