CURRENTPATH = `pwd`
all: rtNode

clean:
	rm -rf $(OBJDIR)
	rm -f librtnode.so

VPATH=linux


RT_SRCS=\
           rtError.cpp \
           rtFile.cpp \
           rtLog.cpp \
           rtPathUtils.cpp \
           rtString.cpp \
           rtObject.cpp \
           rtValue.cpp \
           rtThreadPool.cpp \
           rtThreadTask.cpp \
           rtThreadQueue.cpp \
           rtLibrary.cpp \
           rtZip.cpp \
           utf8.c

PX_SRCS=\
	   pxScene2d.cpp \
     pxResource.cpp \
     pxConstants.cpp \
	   pxRectangle.cpp \
           pxText.cpp \
           pxTextBox.cpp \
           pxWayland.cpp \
           pxImage.cpp \
           pxUtil.cpp \
           pxContextGL.cpp \
           pxImage9.cpp \
           pxFileDownloader.cpp \
           pxInterpolators.cpp \
	   pxMatrix4T.cpp \
           pxArchive.cpp \
           pxFont.cpp \
           rtNode.cpp \
           ../external/westeros-stub/westeros-stub.cpp

PXCOREDIR=../../../
PXHDRS=$(PXCOREDIR)/src

NODEINC=../external/libnode
NODEDIR=../external/libnode

SEARCH=\
  -Ilinux \
  -I$(EXTDIR)/jpg \
  -I$(EXTDIR)/curl/include \
  -I$(EXTDIR)/ft/include \
  -I$(EXTDIR)/png \
  -I$(PXHDRS)\
  -I. \
  -I$(NODEINC)/src \
  -I$(NODEINC)/deps/uv/include \
  -I$(NODEINC)/deps/v8 \
  -I$(NODEINC)/deps/cares/include \
  -I$(NODEINC)/deps/debugger-agent/include \
  -I$(NODEINC)/deps/v8/include \
  -I../external/westeros/external/install/include \
  -I../external/westeros-stub \
	$(PXCORE_INCLUDES)


CXXFLAGS= -Wno-attributes -Wall -Wextra -fpermissive -fPIC $(SEARCH) -g -DRT_PLATFORM_LINUX -DPX_NO_WINDOW -DPX_PLATFORM_GENERIC_EGL -DENABLE_RT_NODE -DRUNINMAIN -DDISABLE_SYNC_EVENTS -DBSTD_CPU_ENDIAN=BSTD_ENDIAN_LITTLE 


LDNODE   = -L$(NODEDIR)/out/Release/obj.target
LDNODEV8 = -L$(NODEDIR)/out/Release


LDEXT   = -lpng16 -ljpeg -lfreetype -lcurl $(LDNODE) $(LDNODEV8)

#LDFLAGS = -lnode -pthread $(LDEXT) -ldl -lrt -shared -Wl,-soname,librtnode.so -o librtnode.so.1.0 
LDFLAGS = -lnode -pthread $(LDEXT) -ldl -lrt -shared -Wl,-soname,librtnode.so -o librtnode.so.1.0 -lnexus -lnxclient -lnxpl -lGLESv2


OBJDIR=obj

$(OBJDIR)/pxViewWindow.o: ../../../src/pxViewWindow.cpp
	$(CXX) -o $(OBJDIR)/pxViewWindow.o -Wall $(CXXFLAGS) -c ../../../src/pxViewWindow.cpp

$(OBJDIR)/pxOffscreen.o: ../../../src/pxOffscreen.cpp
	$(CXX) -o $(OBJDIR)/pxOffscreen.o -Wall $(CXXFLAGS) -c ../../../src/pxOffscreen.cpp

$(OBJDIR)/pxWindowNative.o: ../../../src/generic/pxWindowNative.cpp
	$(CXX) -o $(OBJDIR)/pxWindowNative.o -Wall $(CXXFLAGS) -c ../../../src/generic/pxWindowNative.cpp

$(OBJDIR)/pxBufferNative.o: ../../../src/gles/pxBufferNative.cpp
	$(CXX) -o $(OBJDIR)/pxBufferNative.o -Wall $(CXXFLAGS) -c ../../../src/gles/pxBufferNative.cpp

$(OBJDIR)/pxOffscreenNative.o: ../../../src/gles/pxOffscreenNative.cpp
	$(CXX) -o $(OBJDIR)/pxOffscreenNative.o -Wall $(CXXFLAGS) -c ../../../src/gles/pxOffscreenNative.cpp

$(OBJDIR)/pxEventLoopNative.o: ../../../src/gles/pxEventLoopNative.cpp
	$(CXX) -o $(OBJDIR)/pxEventLoopNative.o -Wall $(CXXFLAGS) -c ../../../src/gles/pxEventLoopNative.cpp

$(OBJDIR)/pxTimerNative.o: ../../../src/gles/pxTimerNative.cpp
	$(CXX) -o $(OBJDIR)/pxTimerNative.o -Wall $(CXXFLAGS) -c ../../../src/gles/pxTimerNative.cpp

$(OBJDIR)/pxWindowUtil.o: ../../../src/pxWindowUtil.cpp
	$(CXX) -o $(OBJDIR)/pxWindowUtil.o -Wall $(CXXFLAGS) -c ../../../src/pxWindowUtil.cpp



$(OBJDIR)/rtMutexNative.o: linux/rtMutexNative.cpp
	$(CXX) -o $(OBJDIR)/rtMutexNative.o -Wall $(CXXFLAGS) -c linux/rtMutexNative.cpp

$(OBJDIR)/rtThreadPoolNative.o: linux/rtThreadPoolNative.cpp
	$(CXX) -o $(OBJDIR)/rtThreadPoolNative.o -Wall $(CXXFLAGS) -c linux/rtThreadPoolNative.cpp

$(OBJDIR)/rtWrapperUtils.o: jsbindings/rtWrapperUtils.cpp
	$(CXX) -o $(OBJDIR)/rtWrapperUtils.o -Wall $(CXXFLAGS) -c jsbindings/rtWrapperUtils.cpp

$(OBJDIR)/rtFunctionWrapper.o: jsbindings/rtFunctionWrapper.cpp
	$(CXX) -o $(OBJDIR)/rtFunctionWrapper.o -Wall $(CXXFLAGS) -c jsbindings/rtFunctionWrapper.cpp

$(OBJDIR)/rtObjectWrapper.o: jsbindings/rtObjectWrapper.cpp
	$(CXX) -o $(OBJDIR)/rtObjectWrapper.o -Wall $(CXXFLAGS) -c jsbindings/rtObjectWrapper.cpp

$(OBJDIR)/jsCallback.o: jsbindings/jsCallback.cpp
	$(CXX) -o $(OBJDIR)/jsCallback.o -Wall $(CXXFLAGS) -c jsbindings/jsCallback.cpp

$(OBJDIR)/westeros-stub.o: ../external/westeros-stub/westeros-stub.cpp
	$(CXX) -o $(OBJDIR)/westeros-stub.o -Wall $(CXXFLAGS) -c ../external/westeros-stub/westeros-stub.cpp


SRCS=$(PX_SRCS) $(RT_SRCS) 

OBJS=$(patsubst %.cpp, $(OBJDIR)/%.o, $(notdir $(SRCS)))
OBJS:=$(patsubst %.c, $(OBJDIR)/%.o, $(OBJS))
OBJS: $(SRCS)
OTHER_OBJS=$(OBJDIR)/pxViewWindow.o $(OBJDIR)/pxOffscreen.o $(OBJDIR)/pxWindowNative.o $(OBJDIR)/pxBufferNative.o $(OBJDIR)/pxOffscreenNative.o $(OBJDIR)/pxEventLoopNative.o $(OBJDIR)/pxTimerNative.o $(OBJDIR)/pxWindowUtil.o $(OBJDIR)/rtMutexNative.o $(OBJDIR)/rtThreadPoolNative.o $(OBJDIR)/rtWrapperUtils.o $(OBJDIR)/rtFunctionWrapper.o $(OBJDIR)/rtObjectWrapper.o $(OBJDIR)/jsCallback.o
OBJS_ALL=$(OBJS) $(OTHER_OBJS)

$(OBJDIR)/%.o : %.cpp
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(CXX) -c $(CXXFLAGS) $< -o $@

$(OBJDIR)/%.o : %.c
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(CC) -c $(CXXFLAGS) $< -o $@


rtNode: $(OBJS_ALL) 
	$(CXX) $(OBJS_ALL) $(LDFLAGS) 
	ln -sf librtnode.so.1.0 librtnode.so.1
	ln -sf librtnode.so.1 librtnode.so

