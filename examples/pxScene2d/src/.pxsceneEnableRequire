#
# Copyright 2018 Damian Wrobel <dwrobel@ertelnet.rybnik.pl>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Configuration to setup Spark to run visual-tests and reference-app.
#
# Usage (assumes you're using bash shell):
#     source .pxsceneEnableRequire

# Please don't rename nor move this file to a different location.


spark_find_dir() {
    local basedir="$1"
    local childdir="$2"

    for i in $(seq 8); do
        local dir=${basedir}/${childdir}

        if [ -d ${dir} ]; then
            echo $(realpath ${dir})
            return
        fi

        local childdir="../${childdir}"
    done

    echo ""
}


spark_exports() {
    local RD='\033[0;31m'
    local GR='\033[0;32m'
    local NC='\033[0m'

    echo ""
    echo "Spark configuration for visual-tests and reference-app:"

    local scriptdir=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)

    local refappdir=$(spark_find_dir ${scriptdir} pxscene-ref-app)

    if [ -z "${refappdir}" ]; then
        echo -e "${RD}ERROR:${NC} Could not found ${GR}pxscene-ref-app${NC} repository."
        return 1;
    fi

    local rendering_engine_dir=$(spark_find_dir ${scriptdir} jsv8-plugins)

    if [ -z "${rendering_engine_dir}" ]; then
        echo -e "${RD}ERROR:${NC} Could not found ${GR}jsv8-plugins${NC} repository."
        return 1;
    fi

    NODE_PATH=""

    echo "node search path:"

    for p in ${scriptdir} ${rendering_engine_dir}/lgire/src ${refappdir}/src; do
        if [ -d ${p} ]; then
            echo -e "\t ${GR}[OK]    ${NC} ${p}"

            if [ -n "${NODE_PATH}" ]; then
                NODE_PATH="${NODE_PATH}:"
            fi

            NODE_PATH=${NODE_PATH}${p}
        else
            echo -e "\t ${RD}[FAILED]${NC} ${p}"
        fi
    done

    export NODE_PATH

    export PXSCENE_REQUIRE_ENABLE_FILE_PATH=${scriptdir}
    export PXSCENE_ENABLE_CUSTOM_ANIMATOR=1

    echo " custom animator: ${PXSCENE_ENABLE_CUSTOM_ANIMATOR}"
    echo ""
    echo "Launching reference-app:"
    echo "    ./spark.sh ${refappdir}/src/main.js"
    echo ""
    echo "Launching visual-tests:"
    echo "    ./spark.sh ${rendering_engine_dir}/lgire/src/visual-tests/text-colors.js"
    echo ""
}


spark_exports
